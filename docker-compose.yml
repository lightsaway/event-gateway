version: '3.8'

services:
  redpanda:
    image: redpandadata/redpanda:latest
    container_name: redpanda
    command:
      - redpanda
      - start
      - --overprovisioned
      - --node-id
      - "0"
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --check=true
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - REDPANDA_AUTO_CREATE_TOPICS=true
    healthcheck:
      test: ["CMD", "rpk", "cluster", "health"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    depends_on:
      redpanda:
        condition: service_healthy
    ports:
      - "8089:8080"
    environment:
      - KAFKA_BROKERS=redpanda:29092
      - SERVER_LISTENADDRESS=0.0.0.0
      - SERVER_LISTENPORT=8080

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    ports:
      - "1883:1883" # MQTT
      - "9001:9001" # WebSockets
    volumes:
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log
    configs:
      - source: mosquitto_config
        target: /mosquitto/config/mosquitto.conf
    healthcheck:
      test:
        [
          "CMD",
          "mosquitto_sub",
          "-t",
          "$$SYS/#",
          "-C",
          "1",
          "-i",
          "healthcheck",
          "-W",
          "3",
        ]
      interval: 10s
      timeout: 5s
      retries: 3

  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    container_name: mqtt-explorer
    ports:
      - "4000:4000"
    environment:
      - MQTT_CONNECTION_HOST=mosquitto
      - MQTT_CONNECTION_PORT=1883
    depends_on:
      mosquitto:
        condition: service_healthy

  # event-gateway:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - RUST_LOG=info
  #     - APP_CONFIG_PATH=/etc/event-gateway/config-postgres.toml
  #   depends_on:
  #     - postgres
  #   networks:
  #     - event-gateway-network
  #   restart: unless-stopped

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=event_gateway
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - event-gateway-network
    restart: unless-stopped

volumes:
  mosquitto-data:
  mosquitto-log:
  postgres-data:

configs:
  mosquitto_config:
    content: |
      listener 1883
      protocol mqtt

      listener 9001
      protocol websockets

      allow_anonymous true

networks:
  default:
    name: kafka-network
  event-gateway-network:
    driver: bridge
